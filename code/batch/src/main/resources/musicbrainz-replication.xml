<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/batch"
             xmlns:util="http://www.springframework.org/schema/util"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:p="http://www.springframework.org/schema/p"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:amq="http://activemq.apache.org/schema/core"
             xsi:schemaLocation="
                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
                http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd
                http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.0.xsd
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
		        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
		        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <aop:aspectj-autoproxy/>
    <context:annotation-config/>

    <beans:import resource="batch-core.xml"/>

    <beans:bean id="replicationUtils" class="com.joshlong.jukebox2.batch.musicbrainz.replication.ReplicationUtils">
        <beans:constructor-arg value="file://#{systemProperties['user.home']}/Desktop/replication"/>
    </beans:bean>

    <beans:bean class="com.joshlong.jukebox2.batch.musicbrainz.replication.ReplicationProcessor"
                p:jdbcTemplate-ref="musicbrainzJdbcTemplate"
                p:replicationUtils-ref="replicationUtils"
                p:loadPendingJob-ref="loadReplicationDataJob"
                p:jobLauncher-ref="jobLauncher"
            />


    <!-- actual Spring batch beans, now -->

    <job job-repository="jobRepository" id="loadReplicationDataJob">
        <step id="pending">
            <tasklet>
                <chunk reader="pendingReader" writer="pendingDTOItemWriter" commit-interval="100"/>
            </tasklet>
        </step>
    </job>

    <beans:bean id="pendingDTOItemWriter" class="com.joshlong.jukebox2.batch.musicbrainz.replication.PendingDTOItemWriter" p:jdbcTemplate-ref="musicbrainzJdbcTemplate"/>
<!--

    <beans:bean id="pendingWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step"
                p:dataSource-ref="musicbrainzDataSource"  >
        
        <beans:property name="itemSqlParameterSourceProvider">
            <beans:bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </beans:property>
        <beans:property name="sql"
                        value="INSERT INTO &quot;Pending&quot;(SeqId,TableName,Op,XID) VALUES(  :SeqId, :TableName, :Op, :XID )"/>
    </beans:bean>
-->


    <beans:bean id="pendingReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step" p:resource="file://#{jobParameters['pendingFile']}">
        <beans:property name="lineMapper">
            <beans:bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <beans:property name="lineTokenizer">
                    <beans:bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <beans:property name="delimiter">
                            <util:constant static-field="org.springframework.batch.item.file.transform.DelimitedLineTokenizer.DELIMITER_TAB"/>
                        </beans:property>
                        <beans:property name="names" value="SeqId,TableName,Op,XID" />
                    </beans:bean>
                </beans:property>
                <beans:property name="fieldSetMapper" >
                    <beans:bean  class="com.joshlong.jukebox2.batch.musicbrainz.replication.PendingFieldSetMapper"/>

                </beans:property>
            </beans:bean>
        </beans:property>
    </beans:bean>



</beans:beans>
